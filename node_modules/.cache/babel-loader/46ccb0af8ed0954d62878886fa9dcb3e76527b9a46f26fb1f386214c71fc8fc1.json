{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nconst useSearch = (endpoint, initialFilters = {}) => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState(initialFilters);\n  const [totalResults, setTotalResults] = useState(0);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Debounced search function\n  const search = useCallback(debounce(async (searchFilters, page = 1) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Build query parameters\n      const params = new URLSearchParams();\n      Object.entries(searchFilters).forEach(([key, value]) => {\n        if (value !== null && value !== undefined && value !== '') {\n          if (Array.isArray(value)) {\n            value.forEach(v => params.append(key, v));\n          } else {\n            params.append(key, value);\n          }\n        }\n      });\n      params.append('page', page);\n      const response = await axios.get(`${endpoint}?${params.toString()}`);\n      if (page === 1) {\n        setResults(response.data.results || []);\n      } else {\n        setResults(prev => [...prev, ...(response.data.results || [])]);\n      }\n      setTotalResults(response.data.count || 0);\n      setHasNextPage(!!response.data.next);\n      setCurrentPage(page);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Search error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Search failed');\n      setResults([]);\n    } finally {\n      setLoading(false);\n    }\n  }, 300), [endpoint]);\n\n  // Update filters and trigger search\n  const updateFilters = useCallback(newFilters => {\n    const updatedFilters = {\n      ...filters,\n      ...newFilters\n    };\n    setFilters(updatedFilters);\n    setCurrentPage(1);\n    search(updatedFilters, 1);\n  }, [filters, search]);\n\n  // Reset filters\n  const resetFilters = useCallback(() => {\n    setFilters(initialFilters);\n    setCurrentPage(1);\n    search(initialFilters, 1);\n  }, [initialFilters, search]);\n\n  // Load more results (pagination)\n  const loadMore = useCallback(() => {\n    if (hasNextPage && !loading) {\n      search(filters, currentPage + 1);\n    }\n  }, [filters, currentPage, hasNextPage, loading, search]);\n\n  // Remove a specific filter\n  const removeFilter = useCallback(filterKey => {\n    const newFilters = {\n      ...filters\n    };\n    delete newFilters[filterKey];\n    updateFilters(newFilters);\n  }, [filters, updateFilters]);\n\n  // Initial search\n  useEffect(() => {\n    search(filters, 1);\n  }, []);\n  return {\n    results,\n    loading,\n    error,\n    filters,\n    totalResults,\n    hasNextPage,\n    currentPage,\n    updateFilters,\n    resetFilters,\n    removeFilter,\n    loadMore,\n    search: newFilters => search(newFilters, 1)\n  };\n};\n\n// Debounce utility function\n_s(useSearch, \"20rFY4Fugq5SsO+f62KzesTDMok=\");\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport default useSearch;","map":{"version":3,"names":["useState","useEffect","useCallback","axios","useSearch","endpoint","initialFilters","_s","results","setResults","loading","setLoading","error","setError","filters","setFilters","totalResults","setTotalResults","hasNextPage","setHasNextPage","currentPage","setCurrentPage","search","debounce","searchFilters","page","params","URLSearchParams","Object","entries","forEach","key","value","undefined","Array","isArray","v","append","response","get","toString","data","prev","count","next","err","_err$response","_err$response$data","console","message","updateFilters","newFilters","updatedFilters","resetFilters","loadMore","removeFilter","filterKey","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout"],"sources":["C:/Users/hruth/frontend/src/hooks/useSearch.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useSearch = (endpoint, initialFilters = {}) => {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [filters, setFilters] = useState(initialFilters);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [hasNextPage, setHasNextPage] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Debounced search function\r\n  const search = useCallback(\r\n    debounce(async (searchFilters, page = 1) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // Build query parameters\r\n        const params = new URLSearchParams();\r\n        \r\n        Object.entries(searchFilters).forEach(([key, value]) => {\r\n          if (value !== null && value !== undefined && value !== '') {\r\n            if (Array.isArray(value)) {\r\n              value.forEach(v => params.append(key, v));\r\n            } else {\r\n              params.append(key, value);\r\n            }\r\n          }\r\n        });\r\n\r\n        params.append('page', page);\r\n        \r\n        const response = await axios.get(`${endpoint}?${params.toString()}`);\r\n        \r\n        if (page === 1) {\r\n          setResults(response.data.results || []);\r\n        } else {\r\n          setResults(prev => [...prev, ...(response.data.results || [])]);\r\n        }\r\n        \r\n        setTotalResults(response.data.count || 0);\r\n        setHasNextPage(!!response.data.next);\r\n        setCurrentPage(page);\r\n      } catch (err) {\r\n        console.error('Search error:', err);\r\n        setError(err.response?.data?.message || 'Search failed');\r\n        setResults([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, 300),\r\n    [endpoint]\r\n  );\r\n\r\n  // Update filters and trigger search\r\n  const updateFilters = useCallback((newFilters) => {\r\n    const updatedFilters = { ...filters, ...newFilters };\r\n    setFilters(updatedFilters);\r\n    setCurrentPage(1);\r\n    search(updatedFilters, 1);\r\n  }, [filters, search]);\r\n\r\n  // Reset filters\r\n  const resetFilters = useCallback(() => {\r\n    setFilters(initialFilters);\r\n    setCurrentPage(1);\r\n    search(initialFilters, 1);\r\n  }, [initialFilters, search]);\r\n\r\n  // Load more results (pagination)\r\n  const loadMore = useCallback(() => {\r\n    if (hasNextPage && !loading) {\r\n      search(filters, currentPage + 1);\r\n    }\r\n  }, [filters, currentPage, hasNextPage, loading, search]);\r\n\r\n  // Remove a specific filter\r\n  const removeFilter = useCallback((filterKey) => {\r\n    const newFilters = { ...filters };\r\n    delete newFilters[filterKey];\r\n    updateFilters(newFilters);\r\n  }, [filters, updateFilters]);\r\n\r\n  // Initial search\r\n  useEffect(() => {\r\n    search(filters, 1);\r\n  }, []);\r\n\r\n  return {\r\n    results,\r\n    loading,\r\n    error,\r\n    filters,\r\n    totalResults,\r\n    hasNextPage,\r\n    currentPage,\r\n    updateFilters,\r\n    resetFilters,\r\n    removeFilter,\r\n    loadMore,\r\n    search: (newFilters) => search(newFilters, 1)\r\n  };\r\n};\r\n\r\n// Debounce utility function\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport default useSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}